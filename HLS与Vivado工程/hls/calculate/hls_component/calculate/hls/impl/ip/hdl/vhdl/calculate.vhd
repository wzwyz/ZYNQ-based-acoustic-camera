-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calculate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_new : IN STD_LOGIC_VECTOR (383 downto 0);
    data_old : IN STD_LOGIC_VECTOR (383 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (54 downto 0) );
end;


architecture behav of calculate is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "calculate_calculate,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.725000,HLS_SYN_LAT=18,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3717,HLS_SYN_LUT=2054,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_107 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000111";
    constant ap_const_lv32_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_137 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110111";
    constant ap_const_lv32_138 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_167 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100111";
    constant ap_const_lv32_168 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal add01_fu_300_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add01_reg_1146 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add23_fu_314_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add23_reg_1151 : STD_LOGIC_VECTOR (24 downto 0);
    signal add45_fu_328_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add45_reg_1156 : STD_LOGIC_VECTOR (24 downto 0);
    signal add67_fu_342_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add67_reg_1161 : STD_LOGIC_VECTOR (24 downto 0);
    signal add89_fu_356_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add89_reg_1166 : STD_LOGIC_VECTOR (24 downto 0);
    signal addAB_fu_370_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addAB_reg_1171 : STD_LOGIC_VECTOR (24 downto 0);
    signal addCD_fu_384_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addCD_reg_1176 : STD_LOGIC_VECTOR (24 downto 0);
    signal addEF_fu_398_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addEF_reg_1181 : STD_LOGIC_VECTOR (24 downto 0);
    signal add01_1_fu_566_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add01_1_reg_1186 : STD_LOGIC_VECTOR (24 downto 0);
    signal add23_1_fu_580_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add23_1_reg_1191 : STD_LOGIC_VECTOR (24 downto 0);
    signal add45_1_fu_594_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add45_1_reg_1196 : STD_LOGIC_VECTOR (24 downto 0);
    signal add67_1_fu_608_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add67_1_reg_1201 : STD_LOGIC_VECTOR (24 downto 0);
    signal add89_1_fu_622_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add89_1_reg_1206 : STD_LOGIC_VECTOR (24 downto 0);
    signal addAB_1_fu_636_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addAB_1_reg_1211 : STD_LOGIC_VECTOR (24 downto 0);
    signal addCD_1_fu_650_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addCD_1_reg_1216 : STD_LOGIC_VECTOR (24 downto 0);
    signal addEF_1_fu_664_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal addEF_1_reg_1221 : STD_LOGIC_VECTOR (24 downto 0);
    signal add03_fu_676_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add03_reg_1226 : STD_LOGIC_VECTOR (25 downto 0);
    signal add47_fu_688_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add47_reg_1231 : STD_LOGIC_VECTOR (25 downto 0);
    signal add8B_fu_700_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add8B_reg_1236 : STD_LOGIC_VECTOR (25 downto 0);
    signal addCF_fu_712_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal addCF_reg_1241 : STD_LOGIC_VECTOR (25 downto 0);
    signal add03_1_fu_724_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add03_1_reg_1246 : STD_LOGIC_VECTOR (25 downto 0);
    signal add47_1_fu_736_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add47_1_reg_1251 : STD_LOGIC_VECTOR (25 downto 0);
    signal add8B_1_fu_748_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add8B_1_reg_1256 : STD_LOGIC_VECTOR (25 downto 0);
    signal addCF_1_fu_760_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal addCF_1_reg_1261 : STD_LOGIC_VECTOR (25 downto 0);
    signal add07_fu_772_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add07_reg_1266 : STD_LOGIC_VECTOR (26 downto 0);
    signal add8F_fu_784_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add8F_reg_1272 : STD_LOGIC_VECTOR (26 downto 0);
    signal add07_1_fu_796_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add07_1_reg_1278 : STD_LOGIC_VECTOR (26 downto 0);
    signal add8F_1_fu_808_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add8F_1_reg_1284 : STD_LOGIC_VECTOR (26 downto 0);
    signal add0F_fu_826_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add0F_reg_1290 : STD_LOGIC_VECTOR (26 downto 0);
    signal add0F_reg_1290_pp0_iter4_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal add0F_1_fu_842_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add0F_1_reg_1296 : STD_LOGIC_VECTOR (26 downto 0);
    signal add0F_1_reg_1296_pp0_iter4_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1302_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1307 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1307_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln61_fu_862_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln61_reg_1312 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln61_1_fu_867_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln61_1_reg_1317 : STD_LOGIC_VECTOR (26 downto 0);
    signal high_reg_1322 : STD_LOGIC_VECTOR (8 downto 0);
    signal medium_reg_1327 : STD_LOGIC_VECTOR (8 downto 0);
    signal low_fu_902_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal low_reg_1332 : STD_LOGIC_VECTOR (8 downto 0);
    signal high_1_reg_1337 : STD_LOGIC_VECTOR (8 downto 0);
    signal medium_1_reg_1342 : STD_LOGIC_VECTOR (8 downto 0);
    signal low_1_fu_926_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal low_1_reg_1347 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln75_fu_930_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_reg_1352 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_reg_1352_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_reg_1352_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_fu_939_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_reg_1360 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_reg_1360_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_reg_1360_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_fu_942_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_reg_1368 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_reg_1368_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_reg_1368_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_1_fu_957_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_1_reg_1376 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_1_reg_1376_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln75_1_reg_1376_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_1_fu_966_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_1_reg_1384 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_1_reg_1384_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln76_1_reg_1384_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_1_fu_969_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_1_reg_1392 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_1_reg_1392_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln77_1_reg_1392_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_933_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal h2_reg_1400 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_945_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal hl_reg_1405 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_951_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ml_reg_1410 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_960_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal h2_1_reg_1415 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_972_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal hl_1_reg_1420 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_978_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ml_1_reg_1425 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1122_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal h2_hm_reg_1460 : STD_LOGIC_VECTOR (25 downto 0);
    signal h2_hm_reg_1460_pp0_iter13_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal h2_hm_reg_1460_pp0_iter14_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1110_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal m2_hl_reg_1465 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1116_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal l2_ml_reg_1470 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1140_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal h2_hm_1_reg_1475 : STD_LOGIC_VECTOR (25 downto 0);
    signal h2_hm_1_reg_1475_pp0_iter13_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal h2_hm_1_reg_1475_pp0_iter14_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1128_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal m2_hl_1_reg_1480 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1134_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal l2_ml_1_reg_1485 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1044_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal m2_hl_l2_ml_reg_1510 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1060_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal m2_hl_l2_ml_1_reg_1515 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1076_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal h2_hm_m2_hl_l2_ml_reg_1540 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_1092_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal h2_hm_m2_hl_l2_ml_1_reg_1545 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mic_fu_138_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_1_fu_142_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln36_1_fu_296_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln36_fu_292_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_2_fu_152_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_3_fu_162_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln37_1_fu_310_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln37_fu_306_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_4_fu_172_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_5_fu_182_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln38_1_fu_324_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln38_fu_320_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_6_fu_192_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_7_fu_202_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln39_1_fu_338_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln39_fu_334_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_8_fu_212_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_9_fu_222_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln40_1_fu_352_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln40_fu_348_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_10_fu_232_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_11_fu_242_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln41_1_fu_366_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln41_fu_362_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_12_fu_252_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_13_fu_262_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln42_1_fu_380_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln42_fu_376_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_14_fu_272_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_15_fu_282_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln43_1_fu_394_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln43_fu_390_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_16_fu_404_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_17_fu_408_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln36_3_fu_562_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln36_2_fu_558_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_18_fu_418_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_19_fu_428_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln37_3_fu_576_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln37_2_fu_572_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_20_fu_438_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_21_fu_448_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln38_3_fu_590_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln38_2_fu_586_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_22_fu_458_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_23_fu_468_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln39_3_fu_604_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln39_2_fu_600_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_24_fu_478_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_25_fu_488_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln40_3_fu_618_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln40_2_fu_614_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_26_fu_498_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_27_fu_508_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln41_3_fu_632_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln41_2_fu_628_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_28_fu_518_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_29_fu_528_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln42_3_fu_646_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln42_2_fu_642_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal mic_30_fu_538_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal mic_31_fu_548_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln43_3_fu_660_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln43_2_fu_656_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln45_1_fu_673_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln45_fu_670_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln46_1_fu_685_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln46_fu_682_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln47_1_fu_697_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln47_fu_694_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln48_1_fu_709_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln48_fu_706_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln45_3_fu_721_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln45_2_fu_718_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln46_3_fu_733_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln46_2_fu_730_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln47_3_fu_745_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln47_2_fu_742_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln48_3_fu_757_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln48_2_fu_754_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln50_1_fu_769_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln50_fu_766_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln51_1_fu_781_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln51_fu_778_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln50_3_fu_793_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln50_2_fu_790_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln51_3_fu_805_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln51_2_fu_802_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln53_1_fu_817_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln53_fu_814_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln53_3_fu_833_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln53_2_fu_830_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln53_fu_820_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln53_3_fu_836_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal abs_new_0_in_fu_872_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal abs_old_0_in_fu_877_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_933_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_933_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_945_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_945_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_951_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_951_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_960_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_960_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_972_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_972_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_978_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_978_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_991_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln83_1_fu_1016_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1044_p0 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1044_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1060_p0 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1060_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1076_p0 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_1076_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_1092_p0 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_1092_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_1104_p0 : STD_LOGIC_VECTOR (54 downto 0);
    signal grp_fu_1104_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal grp_fu_1110_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1110_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1110_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1116_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1116_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1116_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1122_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1122_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1122_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1128_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1128_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1128_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1134_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1134_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1134_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1140_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1140_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1140_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1104_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal grp_fu_1110_p20 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1128_p20 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_951_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_978_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component calculate_mul_9ns_9ns_18_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component calculate_add_38ns_38ns_38_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (37 downto 0);
        din1 : IN STD_LOGIC_VECTOR (37 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;


    component calculate_add_54ns_54ns_54_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (53 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component calculate_sub_55ns_55ns_55_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (54 downto 0);
        din1 : IN STD_LOGIC_VECTOR (54 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (54 downto 0) );
    end component;


    component calculate_mac_muladd_9ns_9ns_19ns_20_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component calculate_mac_muladd_9ns_9ns_28ns_28_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component calculate_mac_muladd_9ns_9ns_26ns_26_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_9ns_9ns_18_5_1_U1 : component calculate_mul_9ns_9ns_18_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_933_p0,
        din1 => grp_fu_933_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_933_p2);

    mul_9ns_9ns_18_5_1_U2 : component calculate_mul_9ns_9ns_18_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_945_p0,
        din1 => grp_fu_945_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_945_p2);

    mul_9ns_9ns_18_5_1_U3 : component calculate_mul_9ns_9ns_18_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_951_p0,
        din1 => grp_fu_951_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_951_p2);

    mul_9ns_9ns_18_5_1_U4 : component calculate_mul_9ns_9ns_18_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_960_p0,
        din1 => grp_fu_960_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_960_p2);

    mul_9ns_9ns_18_5_1_U5 : component calculate_mul_9ns_9ns_18_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_972_p0,
        din1 => grp_fu_972_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_972_p2);

    mul_9ns_9ns_18_5_1_U6 : component calculate_mul_9ns_9ns_18_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_978_p0,
        din1 => grp_fu_978_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_978_p2);

    add_38ns_38ns_38_2_1_U7 : component calculate_add_38ns_38ns_38_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 38,
        din1_WIDTH => 38,
        dout_WIDTH => 38)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1044_p0,
        din1 => grp_fu_1044_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1044_p2);

    add_38ns_38ns_38_2_1_U8 : component calculate_add_38ns_38ns_38_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 38,
        din1_WIDTH => 38,
        dout_WIDTH => 38)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1060_p0,
        din1 => grp_fu_1060_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1060_p2);

    add_54ns_54ns_54_2_1_U9 : component calculate_add_54ns_54ns_54_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 54,
        din1_WIDTH => 54,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1076_p0,
        din1 => grp_fu_1076_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1076_p2);

    add_54ns_54ns_54_2_1_U10 : component calculate_add_54ns_54ns_54_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 54,
        din1_WIDTH => 54,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1092_p0,
        din1 => grp_fu_1092_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1092_p2);

    sub_55ns_55ns_55_2_1_U11 : component calculate_sub_55ns_55ns_55_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 55,
        din1_WIDTH => 55,
        dout_WIDTH => 55)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1104_p0,
        din1 => grp_fu_1104_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1104_p2);

    mac_muladd_9ns_9ns_19ns_20_4_1_U12 : component calculate_mac_muladd_9ns_9ns_19ns_20_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1110_p0,
        din1 => grp_fu_1110_p1,
        din2 => grp_fu_1110_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1110_p3);

    mac_muladd_9ns_9ns_28ns_28_4_1_U13 : component calculate_mac_muladd_9ns_9ns_28ns_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1116_p0,
        din1 => grp_fu_1116_p1,
        din2 => grp_fu_1116_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1116_p3);

    mac_muladd_9ns_9ns_26ns_26_4_1_U14 : component calculate_mac_muladd_9ns_9ns_26ns_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1122_p0,
        din1 => grp_fu_1122_p1,
        din2 => grp_fu_1122_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1122_p3);

    mac_muladd_9ns_9ns_19ns_20_4_1_U15 : component calculate_mac_muladd_9ns_9ns_19ns_20_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1128_p0,
        din1 => grp_fu_1128_p1,
        din2 => grp_fu_1128_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1128_p3);

    mac_muladd_9ns_9ns_28ns_28_4_1_U16 : component calculate_mac_muladd_9ns_9ns_28ns_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1134_p0,
        din1 => grp_fu_1134_p1,
        din2 => grp_fu_1134_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1134_p3);

    mac_muladd_9ns_9ns_26ns_26_4_1_U17 : component calculate_mac_muladd_9ns_9ns_26ns_26_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1140_p0,
        din1 => grp_fu_1140_p1,
        din2 => grp_fu_1140_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1140_p3);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add01_1_reg_1186 <= add01_1_fu_566_p2;
                add01_reg_1146 <= add01_fu_300_p2;
                add03_1_reg_1246 <= add03_1_fu_724_p2;
                add03_reg_1226 <= add03_fu_676_p2;
                add07_1_reg_1278 <= add07_1_fu_796_p2;
                add07_reg_1266 <= add07_fu_772_p2;
                add0F_1_reg_1296 <= add0F_1_fu_842_p2;
                add0F_1_reg_1296_pp0_iter4_reg <= add0F_1_reg_1296;
                add0F_reg_1290 <= add0F_fu_826_p2;
                add0F_reg_1290_pp0_iter4_reg <= add0F_reg_1290;
                add23_1_reg_1191 <= add23_1_fu_580_p2;
                add23_reg_1151 <= add23_fu_314_p2;
                add45_1_reg_1196 <= add45_1_fu_594_p2;
                add45_reg_1156 <= add45_fu_328_p2;
                add47_1_reg_1251 <= add47_1_fu_736_p2;
                add47_reg_1231 <= add47_fu_688_p2;
                add67_1_reg_1201 <= add67_1_fu_608_p2;
                add67_reg_1161 <= add67_fu_342_p2;
                add89_1_reg_1206 <= add89_1_fu_622_p2;
                add89_reg_1166 <= add89_fu_356_p2;
                add8B_1_reg_1256 <= add8B_1_fu_748_p2;
                add8B_reg_1236 <= add8B_fu_700_p2;
                add8F_1_reg_1284 <= add8F_1_fu_808_p2;
                add8F_reg_1272 <= add8F_fu_784_p2;
                addAB_1_reg_1211 <= addAB_1_fu_636_p2;
                addAB_reg_1171 <= addAB_fu_370_p2;
                addCD_1_reg_1216 <= addCD_1_fu_650_p2;
                addCD_reg_1176 <= addCD_fu_384_p2;
                addCF_1_reg_1261 <= addCF_1_fu_760_p2;
                addCF_reg_1241 <= addCF_fu_712_p2;
                addEF_1_reg_1221 <= addEF_1_fu_664_p2;
                addEF_reg_1181 <= addEF_fu_398_p2;
                h2_1_reg_1415 <= grp_fu_960_p2;
                h2_hm_1_reg_1475 <= grp_fu_1140_p3;
                h2_hm_1_reg_1475_pp0_iter13_reg <= h2_hm_1_reg_1475;
                h2_hm_1_reg_1475_pp0_iter14_reg <= h2_hm_1_reg_1475_pp0_iter13_reg;
                h2_hm_m2_hl_l2_ml_1_reg_1545 <= grp_fu_1092_p2;
                h2_hm_m2_hl_l2_ml_reg_1540 <= grp_fu_1076_p2;
                h2_hm_reg_1460 <= grp_fu_1122_p3;
                h2_hm_reg_1460_pp0_iter13_reg <= h2_hm_reg_1460;
                h2_hm_reg_1460_pp0_iter14_reg <= h2_hm_reg_1460_pp0_iter13_reg;
                h2_reg_1400 <= grp_fu_933_p2;
                high_1_reg_1337 <= abs_old_0_in_fu_877_p3(26 downto 18);
                high_reg_1322 <= abs_new_0_in_fu_872_p3(26 downto 18);
                hl_1_reg_1420 <= grp_fu_972_p2;
                hl_reg_1405 <= grp_fu_945_p2;
                l2_ml_1_reg_1485 <= grp_fu_1134_p3;
                l2_ml_reg_1470 <= grp_fu_1116_p3;
                low_1_reg_1347 <= low_1_fu_926_p1;
                low_reg_1332 <= low_fu_902_p1;
                m2_hl_1_reg_1480 <= grp_fu_1128_p3;
                m2_hl_l2_ml_1_reg_1515 <= grp_fu_1060_p2;
                m2_hl_l2_ml_reg_1510 <= grp_fu_1044_p2;
                m2_hl_reg_1465 <= grp_fu_1110_p3;
                medium_1_reg_1342 <= abs_old_0_in_fu_877_p3(17 downto 9);
                medium_reg_1327 <= abs_new_0_in_fu_872_p3(17 downto 9);
                ml_1_reg_1425 <= grp_fu_978_p2;
                ml_reg_1410 <= grp_fu_951_p2;
                sub_ln61_1_reg_1317 <= sub_ln61_1_fu_867_p2;
                sub_ln61_reg_1312 <= sub_ln61_fu_862_p2;
                tmp_1_reg_1307 <= add_ln53_3_fu_836_p2(27 downto 27);
                tmp_1_reg_1307_pp0_iter4_reg <= tmp_1_reg_1307;
                tmp_reg_1302 <= add_ln53_fu_820_p2(27 downto 27);
                tmp_reg_1302_pp0_iter4_reg <= tmp_reg_1302;
                    zext_ln75_1_reg_1376(8 downto 0) <= zext_ln75_1_fu_957_p1(8 downto 0);
                    zext_ln75_1_reg_1376_pp0_iter7_reg(8 downto 0) <= zext_ln75_1_reg_1376(8 downto 0);
                    zext_ln75_1_reg_1376_pp0_iter8_reg(8 downto 0) <= zext_ln75_1_reg_1376_pp0_iter7_reg(8 downto 0);
                    zext_ln75_reg_1352(8 downto 0) <= zext_ln75_fu_930_p1(8 downto 0);
                    zext_ln75_reg_1352_pp0_iter7_reg(8 downto 0) <= zext_ln75_reg_1352(8 downto 0);
                    zext_ln75_reg_1352_pp0_iter8_reg(8 downto 0) <= zext_ln75_reg_1352_pp0_iter7_reg(8 downto 0);
                    zext_ln76_1_reg_1384(8 downto 0) <= zext_ln76_1_fu_966_p1(8 downto 0);
                    zext_ln76_1_reg_1384_pp0_iter7_reg(8 downto 0) <= zext_ln76_1_reg_1384(8 downto 0);
                    zext_ln76_1_reg_1384_pp0_iter8_reg(8 downto 0) <= zext_ln76_1_reg_1384_pp0_iter7_reg(8 downto 0);
                    zext_ln76_reg_1360(8 downto 0) <= zext_ln76_fu_939_p1(8 downto 0);
                    zext_ln76_reg_1360_pp0_iter7_reg(8 downto 0) <= zext_ln76_reg_1360(8 downto 0);
                    zext_ln76_reg_1360_pp0_iter8_reg(8 downto 0) <= zext_ln76_reg_1360_pp0_iter7_reg(8 downto 0);
                    zext_ln77_1_reg_1392(8 downto 0) <= zext_ln77_1_fu_969_p1(8 downto 0);
                    zext_ln77_1_reg_1392_pp0_iter7_reg(8 downto 0) <= zext_ln77_1_reg_1392(8 downto 0);
                    zext_ln77_1_reg_1392_pp0_iter8_reg(8 downto 0) <= zext_ln77_1_reg_1392_pp0_iter7_reg(8 downto 0);
                    zext_ln77_reg_1368(8 downto 0) <= zext_ln77_fu_942_p1(8 downto 0);
                    zext_ln77_reg_1368_pp0_iter7_reg(8 downto 0) <= zext_ln77_reg_1368(8 downto 0);
                    zext_ln77_reg_1368_pp0_iter8_reg(8 downto 0) <= zext_ln77_reg_1368_pp0_iter7_reg(8 downto 0);
            end if;
        end if;
    end process;
    zext_ln75_reg_1352(17 downto 9) <= "000000000";
    zext_ln75_reg_1352_pp0_iter7_reg(17 downto 9) <= "000000000";
    zext_ln75_reg_1352_pp0_iter8_reg(17 downto 9) <= "000000000";
    zext_ln76_reg_1360(17 downto 9) <= "000000000";
    zext_ln76_reg_1360_pp0_iter7_reg(17 downto 9) <= "000000000";
    zext_ln76_reg_1360_pp0_iter8_reg(17 downto 9) <= "000000000";
    zext_ln77_reg_1368(17 downto 9) <= "000000000";
    zext_ln77_reg_1368_pp0_iter7_reg(17 downto 9) <= "000000000";
    zext_ln77_reg_1368_pp0_iter8_reg(17 downto 9) <= "000000000";
    zext_ln75_1_reg_1376(17 downto 9) <= "000000000";
    zext_ln75_1_reg_1376_pp0_iter7_reg(17 downto 9) <= "000000000";
    zext_ln75_1_reg_1376_pp0_iter8_reg(17 downto 9) <= "000000000";
    zext_ln76_1_reg_1384(17 downto 9) <= "000000000";
    zext_ln76_1_reg_1384_pp0_iter7_reg(17 downto 9) <= "000000000";
    zext_ln76_1_reg_1384_pp0_iter8_reg(17 downto 9) <= "000000000";
    zext_ln77_1_reg_1392(17 downto 9) <= "000000000";
    zext_ln77_1_reg_1392_pp0_iter7_reg(17 downto 9) <= "000000000";
    zext_ln77_1_reg_1392_pp0_iter8_reg(17 downto 9) <= "000000000";
    abs_new_0_in_fu_872_p3 <= 
        sub_ln61_reg_1312 when (tmp_reg_1302_pp0_iter4_reg(0) = '1') else 
        add0F_reg_1290_pp0_iter4_reg;
    abs_old_0_in_fu_877_p3 <= 
        sub_ln61_1_reg_1317 when (tmp_1_reg_1307_pp0_iter4_reg(0) = '1') else 
        add0F_1_reg_1296_pp0_iter4_reg;
    add01_1_fu_566_p2 <= std_logic_vector(signed(sext_ln36_3_fu_562_p1) + signed(sext_ln36_2_fu_558_p1));
    add01_fu_300_p2 <= std_logic_vector(signed(sext_ln36_1_fu_296_p1) + signed(sext_ln36_fu_292_p1));
    add03_1_fu_724_p2 <= std_logic_vector(signed(sext_ln45_3_fu_721_p1) + signed(sext_ln45_2_fu_718_p1));
    add03_fu_676_p2 <= std_logic_vector(signed(sext_ln45_1_fu_673_p1) + signed(sext_ln45_fu_670_p1));
    add07_1_fu_796_p2 <= std_logic_vector(signed(sext_ln50_3_fu_793_p1) + signed(sext_ln50_2_fu_790_p1));
    add07_fu_772_p2 <= std_logic_vector(signed(sext_ln50_1_fu_769_p1) + signed(sext_ln50_fu_766_p1));
    add0F_1_fu_842_p2 <= std_logic_vector(signed(add8F_1_reg_1284) + signed(add07_1_reg_1278));
    add0F_fu_826_p2 <= std_logic_vector(signed(add8F_reg_1272) + signed(add07_reg_1266));
    add23_1_fu_580_p2 <= std_logic_vector(signed(sext_ln37_3_fu_576_p1) + signed(sext_ln37_2_fu_572_p1));
    add23_fu_314_p2 <= std_logic_vector(signed(sext_ln37_1_fu_310_p1) + signed(sext_ln37_fu_306_p1));
    add45_1_fu_594_p2 <= std_logic_vector(signed(sext_ln38_3_fu_590_p1) + signed(sext_ln38_2_fu_586_p1));
    add45_fu_328_p2 <= std_logic_vector(signed(sext_ln38_1_fu_324_p1) + signed(sext_ln38_fu_320_p1));
    add47_1_fu_736_p2 <= std_logic_vector(signed(sext_ln46_3_fu_733_p1) + signed(sext_ln46_2_fu_730_p1));
    add47_fu_688_p2 <= std_logic_vector(signed(sext_ln46_1_fu_685_p1) + signed(sext_ln46_fu_682_p1));
    add67_1_fu_608_p2 <= std_logic_vector(signed(sext_ln39_3_fu_604_p1) + signed(sext_ln39_2_fu_600_p1));
    add67_fu_342_p2 <= std_logic_vector(signed(sext_ln39_1_fu_338_p1) + signed(sext_ln39_fu_334_p1));
    add89_1_fu_622_p2 <= std_logic_vector(signed(sext_ln40_3_fu_618_p1) + signed(sext_ln40_2_fu_614_p1));
    add89_fu_356_p2 <= std_logic_vector(signed(sext_ln40_1_fu_352_p1) + signed(sext_ln40_fu_348_p1));
    add8B_1_fu_748_p2 <= std_logic_vector(signed(sext_ln47_3_fu_745_p1) + signed(sext_ln47_2_fu_742_p1));
    add8B_fu_700_p2 <= std_logic_vector(signed(sext_ln47_1_fu_697_p1) + signed(sext_ln47_fu_694_p1));
    add8F_1_fu_808_p2 <= std_logic_vector(signed(sext_ln51_3_fu_805_p1) + signed(sext_ln51_2_fu_802_p1));
    add8F_fu_784_p2 <= std_logic_vector(signed(sext_ln51_1_fu_781_p1) + signed(sext_ln51_fu_778_p1));
    addAB_1_fu_636_p2 <= std_logic_vector(signed(sext_ln41_3_fu_632_p1) + signed(sext_ln41_2_fu_628_p1));
    addAB_fu_370_p2 <= std_logic_vector(signed(sext_ln41_1_fu_366_p1) + signed(sext_ln41_fu_362_p1));
    addCD_1_fu_650_p2 <= std_logic_vector(signed(sext_ln42_3_fu_646_p1) + signed(sext_ln42_2_fu_642_p1));
    addCD_fu_384_p2 <= std_logic_vector(signed(sext_ln42_1_fu_380_p1) + signed(sext_ln42_fu_376_p1));
    addCF_1_fu_760_p2 <= std_logic_vector(signed(sext_ln48_3_fu_757_p1) + signed(sext_ln48_2_fu_754_p1));
    addCF_fu_712_p2 <= std_logic_vector(signed(sext_ln48_1_fu_709_p1) + signed(sext_ln48_fu_706_p1));
    addEF_1_fu_664_p2 <= std_logic_vector(signed(sext_ln43_3_fu_660_p1) + signed(sext_ln43_2_fu_656_p1));
    addEF_fu_398_p2 <= std_logic_vector(signed(sext_ln43_1_fu_394_p1) + signed(sext_ln43_fu_390_p1));
    add_ln53_3_fu_836_p2 <= std_logic_vector(signed(sext_ln53_3_fu_833_p1) + signed(sext_ln53_2_fu_830_p1));
    add_ln53_fu_820_p2 <= std_logic_vector(signed(sext_ln53_1_fu_817_p1) + signed(sext_ln53_fu_814_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= grp_fu_1104_p2;
    grp_fu_1044_p0 <= (m2_hl_reg_1465 & ap_const_lv18_0);
    grp_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l2_ml_reg_1470),38));
    grp_fu_1060_p0 <= (m2_hl_1_reg_1480 & ap_const_lv18_0);
    grp_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l2_ml_1_reg_1485),38));
    grp_fu_1076_p0 <= (h2_hm_reg_1460_pp0_iter14_reg & ap_const_lv28_0);
    grp_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m2_hl_l2_ml_reg_1510),54));
    grp_fu_1092_p0 <= (h2_hm_1_reg_1475_pp0_iter14_reg & ap_const_lv28_0);
    grp_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m2_hl_l2_ml_1_reg_1515),54));
    grp_fu_1104_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h2_hm_m2_hl_l2_ml_reg_1540),55));
    grp_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h2_hm_m2_hl_l2_ml_1_reg_1545),55));
    grp_fu_1110_p0 <= zext_ln76_reg_1360_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1110_p1 <= zext_ln76_reg_1360_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1110_p2 <= grp_fu_1110_p20(19 - 1 downto 0);
    grp_fu_1110_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_991_p3),20));
    grp_fu_1116_p0 <= zext_ln77_reg_1368_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1116_p1 <= zext_ln77_reg_1368_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1116_p2 <= (ml_reg_1410 & ap_const_lv10_0);
    grp_fu_1122_p0 <= zext_ln76_reg_1360_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1122_p1 <= zext_ln75_reg_1352_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1122_p2 <= (h2_reg_1400 & ap_const_lv8_0);
    grp_fu_1128_p0 <= zext_ln76_1_reg_1384_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1128_p1 <= zext_ln76_1_reg_1384_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1128_p2 <= grp_fu_1128_p20(19 - 1 downto 0);
    grp_fu_1128_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln83_1_fu_1016_p3),20));
    grp_fu_1134_p0 <= zext_ln77_1_reg_1392_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1134_p1 <= zext_ln77_1_reg_1392_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1134_p2 <= (ml_1_reg_1425 & ap_const_lv10_0);
    grp_fu_1140_p0 <= zext_ln76_1_reg_1384_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1140_p1 <= zext_ln75_1_reg_1376_pp0_iter8_reg(9 - 1 downto 0);
    grp_fu_1140_p2 <= (h2_1_reg_1415 & ap_const_lv8_0);
    grp_fu_933_p0 <= zext_ln75_fu_930_p1(9 - 1 downto 0);
    grp_fu_933_p1 <= zext_ln75_fu_930_p1(9 - 1 downto 0);
    grp_fu_945_p0 <= zext_ln77_fu_942_p1(9 - 1 downto 0);
    grp_fu_945_p1 <= zext_ln75_fu_930_p1(9 - 1 downto 0);
    grp_fu_951_p0 <= zext_ln77_fu_942_p1(9 - 1 downto 0);
    grp_fu_951_p1 <= grp_fu_951_p10(9 - 1 downto 0);
    grp_fu_951_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(medium_reg_1327),18));
    grp_fu_960_p0 <= zext_ln75_1_fu_957_p1(9 - 1 downto 0);
    grp_fu_960_p1 <= zext_ln75_1_fu_957_p1(9 - 1 downto 0);
    grp_fu_972_p0 <= zext_ln77_1_fu_969_p1(9 - 1 downto 0);
    grp_fu_972_p1 <= zext_ln75_1_fu_957_p1(9 - 1 downto 0);
    grp_fu_978_p0 <= zext_ln77_1_fu_969_p1(9 - 1 downto 0);
    grp_fu_978_p1 <= grp_fu_978_p10(9 - 1 downto 0);
    grp_fu_978_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(medium_1_reg_1342),18));
    low_1_fu_926_p1 <= abs_old_0_in_fu_877_p3(9 - 1 downto 0);
    low_fu_902_p1 <= abs_new_0_in_fu_872_p3(9 - 1 downto 0);
    mic_10_fu_232_p4 <= data_new(263 downto 240);
    mic_11_fu_242_p4 <= data_new(287 downto 264);
    mic_12_fu_252_p4 <= data_new(311 downto 288);
    mic_13_fu_262_p4 <= data_new(335 downto 312);
    mic_14_fu_272_p4 <= data_new(359 downto 336);
    mic_15_fu_282_p4 <= data_new(383 downto 360);
    mic_16_fu_404_p1 <= data_old(24 - 1 downto 0);
    mic_17_fu_408_p4 <= data_old(47 downto 24);
    mic_18_fu_418_p4 <= data_old(71 downto 48);
    mic_19_fu_428_p4 <= data_old(95 downto 72);
    mic_1_fu_142_p4 <= data_new(47 downto 24);
    mic_20_fu_438_p4 <= data_old(119 downto 96);
    mic_21_fu_448_p4 <= data_old(143 downto 120);
    mic_22_fu_458_p4 <= data_old(167 downto 144);
    mic_23_fu_468_p4 <= data_old(191 downto 168);
    mic_24_fu_478_p4 <= data_old(215 downto 192);
    mic_25_fu_488_p4 <= data_old(239 downto 216);
    mic_26_fu_498_p4 <= data_old(263 downto 240);
    mic_27_fu_508_p4 <= data_old(287 downto 264);
    mic_28_fu_518_p4 <= data_old(311 downto 288);
    mic_29_fu_528_p4 <= data_old(335 downto 312);
    mic_2_fu_152_p4 <= data_new(71 downto 48);
    mic_30_fu_538_p4 <= data_old(359 downto 336);
    mic_31_fu_548_p4 <= data_old(383 downto 360);
    mic_3_fu_162_p4 <= data_new(95 downto 72);
    mic_4_fu_172_p4 <= data_new(119 downto 96);
    mic_5_fu_182_p4 <= data_new(143 downto 120);
    mic_6_fu_192_p4 <= data_new(167 downto 144);
    mic_7_fu_202_p4 <= data_new(191 downto 168);
    mic_8_fu_212_p4 <= data_new(215 downto 192);
    mic_9_fu_222_p4 <= data_new(239 downto 216);
    mic_fu_138_p1 <= data_new(24 - 1 downto 0);
        sext_ln36_1_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_1_fu_142_p4),25));

        sext_ln36_2_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_16_fu_404_p1),25));

        sext_ln36_3_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_17_fu_408_p4),25));

        sext_ln36_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_fu_138_p1),25));

        sext_ln37_1_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_3_fu_162_p4),25));

        sext_ln37_2_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_18_fu_418_p4),25));

        sext_ln37_3_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_19_fu_428_p4),25));

        sext_ln37_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_2_fu_152_p4),25));

        sext_ln38_1_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_5_fu_182_p4),25));

        sext_ln38_2_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_20_fu_438_p4),25));

        sext_ln38_3_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_21_fu_448_p4),25));

        sext_ln38_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_4_fu_172_p4),25));

        sext_ln39_1_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_7_fu_202_p4),25));

        sext_ln39_2_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_22_fu_458_p4),25));

        sext_ln39_3_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_23_fu_468_p4),25));

        sext_ln39_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_6_fu_192_p4),25));

        sext_ln40_1_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_9_fu_222_p4),25));

        sext_ln40_2_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_24_fu_478_p4),25));

        sext_ln40_3_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_25_fu_488_p4),25));

        sext_ln40_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_8_fu_212_p4),25));

        sext_ln41_1_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_11_fu_242_p4),25));

        sext_ln41_2_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_26_fu_498_p4),25));

        sext_ln41_3_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_27_fu_508_p4),25));

        sext_ln41_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_10_fu_232_p4),25));

        sext_ln42_1_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_13_fu_262_p4),25));

        sext_ln42_2_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_28_fu_518_p4),25));

        sext_ln42_3_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_29_fu_528_p4),25));

        sext_ln42_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_12_fu_252_p4),25));

        sext_ln43_1_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_15_fu_282_p4),25));

        sext_ln43_2_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_30_fu_538_p4),25));

        sext_ln43_3_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_31_fu_548_p4),25));

        sext_ln43_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mic_14_fu_272_p4),25));

        sext_ln45_1_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add23_reg_1151),26));

        sext_ln45_2_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add01_1_reg_1186),26));

        sext_ln45_3_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add23_1_reg_1191),26));

        sext_ln45_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add01_reg_1146),26));

        sext_ln46_1_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add67_reg_1161),26));

        sext_ln46_2_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add45_1_reg_1196),26));

        sext_ln46_3_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add67_1_reg_1201),26));

        sext_ln46_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add45_reg_1156),26));

        sext_ln47_1_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addAB_reg_1171),26));

        sext_ln47_2_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add89_1_reg_1206),26));

        sext_ln47_3_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addAB_1_reg_1211),26));

        sext_ln47_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add89_reg_1166),26));

        sext_ln48_1_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addEF_reg_1181),26));

        sext_ln48_2_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addCD_1_reg_1216),26));

        sext_ln48_3_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addEF_1_reg_1221),26));

        sext_ln48_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addCD_reg_1176),26));

        sext_ln50_1_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add47_reg_1231),27));

        sext_ln50_2_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add03_1_reg_1246),27));

        sext_ln50_3_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add47_1_reg_1251),27));

        sext_ln50_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add03_reg_1226),27));

        sext_ln51_1_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addCF_reg_1241),27));

        sext_ln51_2_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add8B_1_reg_1256),27));

        sext_ln51_3_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addCF_1_reg_1261),27));

        sext_ln51_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add8B_reg_1236),27));

        sext_ln53_1_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add8F_reg_1272),28));

        sext_ln53_2_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add07_1_reg_1278),28));

        sext_ln53_3_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add8F_1_reg_1284),28));

        sext_ln53_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add07_reg_1266),28));

    shl_ln1_fu_991_p3 <= (hl_reg_1405 & ap_const_lv1_0);
    shl_ln83_1_fu_1016_p3 <= (hl_1_reg_1420 & ap_const_lv1_0);
    sub_ln61_1_fu_867_p2 <= std_logic_vector(unsigned(ap_const_lv27_0) - unsigned(add0F_1_reg_1296));
    sub_ln61_fu_862_p2 <= std_logic_vector(unsigned(ap_const_lv27_0) - unsigned(add0F_reg_1290));
    zext_ln75_1_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(high_1_reg_1337),18));
    zext_ln75_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(high_reg_1322),18));
    zext_ln76_1_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(medium_1_reg_1342),18));
    zext_ln76_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(medium_reg_1327),18));
    zext_ln77_1_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(low_1_reg_1347),18));
    zext_ln77_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(low_reg_1332),18));
end behav;
