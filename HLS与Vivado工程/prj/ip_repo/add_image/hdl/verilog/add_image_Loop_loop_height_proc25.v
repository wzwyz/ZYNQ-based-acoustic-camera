// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module add_image_Loop_loop_height_proc25 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dstImg_data_dout,
        dstImg_data_num_data_valid,
        dstImg_data_fifo_cap,
        dstImg_data_empty_n,
        dstImg_data_read,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] dstImg_data_dout;
input  [2:0] dstImg_data_num_data_valid;
input  [2:0] dstImg_data_fifo_cap;
input   dstImg_data_empty_n;
output   dstImg_data_read;
output  [23:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [2:0] OUTPUT_STREAM_TKEEP;
output  [2:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dstImg_data_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_done;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_idle;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_ready;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_dstImg_data_read;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TREADY;
wire   [23:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TDATA;
wire    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID;
wire   [2:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TKEEP;
wire   [2:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TSTRB;
wire   [0:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TUSER;
wire   [0:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TLAST;
wire   [0:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TID;
wire   [0:0] grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TDEST;
reg   [0:0] sof_reg_62;
reg    ap_block_state1;
wire    ap_CS_fsm_state3;
reg    grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln188_fu_106_p2;
reg   [9:0] i_fu_58;
wire   [9:0] i_4_fu_112_p2;
wire    ap_CS_fsm_state4;
wire    regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    OUTPUT_STREAM_TVALID_int_regslice;
wire    OUTPUT_STREAM_TREADY_int_regslice;
wire    regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start_reg = 1'b0;
#0 i_fu_58 = 10'd0;
end

add_image_Loop_loop_height_proc25_Pipeline_loop_width grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start),
    .ap_done(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_done),
    .ap_idle(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_idle),
    .ap_ready(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_ready),
    .dstImg_data_dout(dstImg_data_dout),
    .dstImg_data_num_data_valid(3'd0),
    .dstImg_data_fifo_cap(3'd0),
    .dstImg_data_empty_n(dstImg_data_empty_n),
    .dstImg_data_read(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_dstImg_data_read),
    .OUTPUT_STREAM_TREADY(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TREADY),
    .sof_1(sof_reg_62),
    .OUTPUT_STREAM_TDATA(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TDATA),
    .OUTPUT_STREAM_TVALID(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .OUTPUT_STREAM_TKEEP(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TKEEP),
    .OUTPUT_STREAM_TSTRB(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TSTRB),
    .OUTPUT_STREAM_TUSER(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TUSER),
    .OUTPUT_STREAM_TLAST(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TLAST),
    .OUTPUT_STREAM_TID(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TID),
    .OUTPUT_STREAM_TDEST(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TDEST)
);

add_image_regslice_both #(
    .DataWidth( 24 ))
regslice_both_OUTPUT_STREAM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TDATA),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(OUTPUT_STREAM_TREADY_int_regslice),
    .data_out(OUTPUT_STREAM_TDATA),
    .vld_out(regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
);

add_image_regslice_both #(
    .DataWidth( 3 ))
regslice_both_OUTPUT_STREAM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TKEEP),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TKEEP),
    .vld_out(regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk)
);

add_image_regslice_both #(
    .DataWidth( 3 ))
regslice_both_OUTPUT_STREAM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TSTRB),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TSTRB),
    .vld_out(regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk)
);

add_image_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TUSER),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TUSER),
    .vld_out(regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk)
);

add_image_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TLAST),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TLAST),
    .vld_out(regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk)
);

add_image_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TID),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TID),
    .vld_out(regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk)
);

add_image_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TDEST),
    .vld_in(grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TDEST),
    .vld_out(regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln188_fu_106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_ready == 1'b1)) begin
            grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_58 <= 10'd0;
    end else if (((icmp_ln188_fu_106_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_58 <= i_4_fu_112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        sof_reg_62 <= 1'd0;
    end else if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        sof_reg_62 <= 1'd1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dstImg_data_read = grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_dstImg_data_read;
    end else begin
        dstImg_data_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln188_fu_106_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OUTPUT_STREAM_TVALID = regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;

assign OUTPUT_STREAM_TVALID_int_regslice = grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TVALID;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_OUTPUT_STREAM_TREADY = (ap_CS_fsm_state3 & OUTPUT_STREAM_TREADY_int_regslice);

assign grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start = grp_Loop_loop_height_proc25_Pipeline_loop_width_fu_76_ap_start_reg;

assign i_4_fu_112_p2 = (i_fu_58 + 10'd1);

assign icmp_ln188_fu_106_p2 = ((i_fu_58 == 10'd720) ? 1'b1 : 1'b0);

endmodule //add_image_Loop_loop_height_proc25
