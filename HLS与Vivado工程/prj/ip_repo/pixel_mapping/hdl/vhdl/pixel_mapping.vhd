-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pixel_mapping is
port (
    xpos : IN STD_LOGIC_VECTOR (10 downto 0);
    ypos : IN STD_LOGIC_VECTOR (10 downto 0);
    index : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of pixel_mapping is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pixel_mapping_pixel_mapping,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=13.468000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.180000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=26,HLS_VERSION=2024_1}";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv23_CCD : STD_LOGIC_VECTOR (22 downto 0) := "00000000000110011001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal mul_ln9_fu_67_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln9_fu_67_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln9_fu_67_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_73_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln9_1_fu_95_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln9_1_fu_95_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln9_1_fu_95_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1_fu_101_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln9_fu_83_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln9_1_fu_111_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln9_1_fu_95_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln9_fu_67_p00 : STD_LOGIC_VECTOR (22 downto 0);

    component pixel_mapping_mul_11ns_13ns_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;



begin
    mul_11ns_13ns_23_1_1_U1 : component pixel_mapping_mul_11ns_13ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        din0 => mul_ln9_fu_67_p0,
        din1 => mul_ln9_fu_67_p1,
        dout => mul_ln9_fu_67_p2);

    mul_11ns_13ns_23_1_1_U2 : component pixel_mapping_mul_11ns_13ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        din0 => mul_ln9_1_fu_95_p0,
        din1 => mul_ln9_1_fu_95_p1,
        dout => mul_ln9_1_fu_95_p2);




    index <= std_logic_vector(unsigned(shl_ln9_fu_83_p3) + unsigned(zext_ln9_1_fu_111_p1));
    mul_ln9_1_fu_95_p0 <= mul_ln9_1_fu_95_p00(11 - 1 downto 0);
    mul_ln9_1_fu_95_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xpos),23));
    mul_ln9_1_fu_95_p1 <= ap_const_lv23_CCD(13 - 1 downto 0);
    mul_ln9_fu_67_p0 <= mul_ln9_fu_67_p00(11 - 1 downto 0);
    mul_ln9_fu_67_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ypos),23));
    mul_ln9_fu_67_p1 <= ap_const_lv23_CCD(13 - 1 downto 0);
    shl_ln9_fu_83_p3 <= (tmp_fu_73_p4 & ap_const_lv7_0);
    tmp_1_fu_101_p4 <= mul_ln9_1_fu_95_p2(22 downto 15);
    tmp_fu_73_p4 <= mul_ln9_fu_67_p2(21 downto 15);
    zext_ln9_1_fu_111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_101_p4),14));
end behav;
